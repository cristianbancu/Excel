Sub ImportCSV_WithSeverityFormatting()

    Dim fileNames As Variant
    fileNames = Array("Linux Prod.csv", "Linux Test.csv", "AIX Prod&DR.csv", "AIX Test.csv", "Windows Prod.csv", "Windows Test.csv")

    ' âœ… CULORI DEFINITE
    Dim sheetColors As Object
    Set sheetColors = CreateObject("Scripting.Dictionary")
    sheetColors.Add "Linux", RGB(255, 217, 102)
    sheetColors.Add "AIX", RGB(198, 224, 180)
    sheetColors.Add "Windows", RGB(189, 215, 238)

    Dim headerColor As Long: headerColor = RGB(155, 194, 230) ' Accent 1, Lighter 40%

    Dim folderPath As String
    folderPath = ThisWorkbook.Path

    ' CurÄƒÈ›are dacÄƒ existÄƒ
    On Error Resume Next
    Application.DisplayAlerts = False
    Worksheets("All Vulns").Delete
    Worksheets("Comparare").Delete
    Application.DisplayAlerts = True
    On Error GoTo 0

    Dim allSheet As Worksheet
    Set allSheet = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
    allSheet.Name = "All Vulns"
    allSheet.Tab.Color = RGB(204, 153, 255)

    Dim allRow As Long: allRow = 2
    Dim headerSet As Boolean: headerSet = False

    Dim i As Integer
    For i = LBound(fileNames) To UBound(fileNames)
        Dim filePath As String
        Dim sheetName As String
        Dim prefix As String
        Dim wsDest As Worksheet
        Dim lastRow As Long, lastCol As Long
        Dim tableName As String

        sheetName = Replace(fileNames(i), ".csv", "")
        prefix = Split(sheetName)(0)
        filePath = folderPath & "\" & fileNames(i)

        If Len(Dir(filePath)) > 0 Then
            Set wsDest = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
            wsDest.Name = sheetName
            If sheetColors.exists(prefix) Then wsDest.Tab.Color = sheetColors(prefix)

            Application.Workbooks.OpenText _
                Filename:=filePath, _
                DataType:=xlDelimited, _
                Comma:=True, _
                Local:=True

            Dim tempWb As Workbook
            Set tempWb = ActiveWorkbook
            tempWb.Sheets(1).UsedRange.Copy Destination:=wsDest.Range("A1")
            tempWb.Close False

            lastRow = wsDest.Cells(wsDest.Rows.Count, 1).End(xlUp).Row
            lastCol = wsDest.Cells(1, wsDest.Columns.Count).End(xlToLeft).Column
            tableName = "Tbl_" & Replace(sheetName, " ", "_")

            With wsDest
                .ListObjects.Add(xlSrcRange, .Range(.Cells(1, 1), .Cells(lastRow, lastCol)), , xlYes).Name = tableName
                With .ListObjects(tableName)
                    .TableStyle = "TableStyleLight1"
                    .ShowTableStyleRowStripes = False
                    .ShowTableStyleColumnStripes = False
                    With .HeaderRowRange
                        .Interior.Color = headerColor
                        .Font.Bold = True
                    End With
                End With

                With .Range(.Cells(1, 1), .Cells(lastRow, lastCol))
                    .WrapText = True
                    .WrapText = False
                End With

                .Cells.EntireColumn.AutoFit
                .Cells.EntireRow.AutoFit

                ' ðŸ”¶ Colorare pe coloana Severity
                Call ColorSeverityColumn(wsDest, lastRow)
            End With

            ' AdÄƒugare Ã®n All Vulns
            If Not headerSet Then
                wsDest.Range(wsDest.Cells(1, 1), wsDest.Cells(1, lastCol)).Copy Destination:=allSheet.Range("A1")
                headerSet = True
            End If
            wsDest.Range(wsDest.Cells(2, 1), wsDest.Cells(lastRow, lastCol)).Copy Destination:=allSheet.Cells(allRow, 1)
            allRow = allSheet.Cells(allSheet.Rows.Count, 1).End(xlUp).Row + 1
        Else
            MsgBox "FiÈ™ier lipsÄƒ: " & filePath, vbExclamation
        End If
    Next i

    ' Final: format All Vulns
    Dim lastRowAll As Long, lastColAll As Long
    lastRowAll = allSheet.Cells(allSheet.Rows.Count, 1).End(xlUp).Row
    lastColAll = allSheet.Cells(1, allSheet.Columns.Count).End(xlToLeft).Column
    With allSheet
        .ListObjects.Add(xlSrcRange, .Range(.Cells(1, 1), .Cells(lastRowAll, lastColAll)), , xlYes).Name = "Tbl_AllVulns"
        With .ListObjects("Tbl_AllVulns")
            .TableStyle = "TableStyleLight1"
            .ShowTableStyleRowStripes = False
            .ShowTableStyleColumnStripes = False
            With .HeaderRowRange
                .Interior.Color = headerColor
                .Font.Bold = True
            End With
        End With

        With .Range(.Cells(1, 1), .Cells(lastRowAll, lastColAll))
            .WrapText = True
            .WrapText = False
        End With

        .Cells.EntireColumn.AutoFit
        .Cells.EntireRow.AutoFit

        Call ColorSeverityColumn(allSheet, lastRowAll)
    End With

    Dim compareSheet As Worksheet
    Set compareSheet = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
    compareSheet.Name = "Comparare"

    MsgBox "Import complet. Coloanele 'Severity' sunt colorate.", vbInformation
End Sub

Sub ColorSeverityColumn(ws As Worksheet, lastRow As Long)
    On Error Resume Next
    Dim severityCol As Range
    Dim colIndex As Integer
    Dim cell As Range

    colIndex = 0
    For i = 1 To ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
        If Trim(ws.Cells(1, i).Value) = "Severity" Then
            colIndex = i
            Exit For
        End If
    Next i

    If colIndex = 0 Then Exit Sub ' nu existÄƒ coloana Severity

    Set severityCol = ws.Range(ws.Cells(2, colIndex), ws.Cells(lastRow, colIndex))

    For Each cell In severityCol
        Select Case Trim(LCase(cell.Value))
            Case "low": cell.Interior.Color = vbYellow
            Case "medium": cell.Interior.Color = RGB(255, 192, 0)
            Case "high": cell.Interior.Color = vbRed
            Case "critical": cell.Interior.Color = RGB(192, 0, 0)
        End Select
    Next cell
End Sub
